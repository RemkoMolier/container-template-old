name: Pre-Release

on:
  push:
    branches:
      - "main"

permissions:
  contents: read

jobs:
  check-code:
    uses: ./.github/workflows/check-code.yaml
    permissions:
      contents: read
      security-events: write
  build:
    name: "Build"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    needs:
      - check-code
    steps:
      - uses: actions/checkout@v3
      - id: dotenv
        uses: falti/dotenv-action@v1.0.4
      - id: version
        run: |
          echo 'application_version=${{ steps.dotenv.outputs.release }}' | sed 's/-r.*$//g' >> $GITHUB_OUTPUT
          echo 'alpine_suffix=r${{ steps.dotenv.outputs.release}}' | sed 's/^.*-r//g' >> $GITHUB_OUTPUT
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ steps.dotenv.outputs.name }}
          tags: |
            type=raw, value=latest
            type=sha
      - uses: docker/setup-qemu-action@v2
      - id: buildx
        uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64, linux/arm64/v8, linux/arm/v7
          build-args: |
            APPLICATION_VERSION=${{ steps.version.output.application_version }}
            ALPINE_SUFFIX=${{ steps.version.output.alpine_suffix }}
            BUILD_DATE=${{ github.event.created_at }}
            VCS_REF=${{ github.event.head }}
          tags: ${{ steps.meta.outputs.tags }}
          sbom: true
          provenance: false
      - uses: release-drafter/release-drafter@v5
        with:
          name: sha-${GITHUB_SHA::7}
          tag: sha-${GITHUB_SHA::7}
          publish: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: anchore/sbom-action@v0.14.2
        with:
          image: ${{ steps.dotenv.outputs.name }}:latest
          artifact-name: sbom.spdx
          github-token: ${{ secrets.GITHUB_TOKEN }}
          dependency-snapshot: true
          upload-release-assets: true
