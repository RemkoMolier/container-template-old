name: Pre-Release

on:
  push:

permissions:
  contents: read

jobs:
  check-code:
    uses: ./.github/workflows/check-code.yaml
    permissions:
      contents: read
      security-events: write
  build:
    name: "Build"
    runs-on: "ubuntu-latest"
    permissions:
      contents: read
      packages: write
    needs:
      - check-code
    steps:
      - uses: actions/checkout@v3
      - id: dotenv
        uses: falti/dotenv-action@v1.0.4
        with:
          keys-case: bypass
          export-variables: true
      - run: |
          echo "APPLICATION_VERSION=${RELEASE%-r*}" >> "$GITHUB_ENV"
          echo "ALPINE_SUFFIX=r${RELEASE#*-r}" >> "$GITHUB_ENV"
          echo "SHA=${GITHUB_SHA::7}" >> "$GITHUB_ENV"
      - id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.NAME }}
          tags: |
            type=raw, value=latest
            type=sha
      - uses: docker/setup-qemu-action@v2
      - id: buildx
        uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          platforms: linux/amd64, linux/arm64/v8, linux/arm/v7
          build-args: |
            APPLICATION_VERSION=${{ env.APPLICATION_VERSION }}
            ALPINE_SUFFIX=${{ env.ALPINE_SUFFIX }}
            BUILD_DATE=${{ github.event.created_at }}
            VCS_REF=${{ github.event.head }}
          tags: ${{ steps.meta.outputs.tags }}
          sbom: true
          provenance: false
      - uses: release-drafter/release-drafter@v5
        with:
          name: sha-${{ env.SHA }}
          tag: sha-${{ env.SHA }}
          publish: true
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: anchore/sbom-action@v0.14.2
        with:
          image: ${{ env.NAME }}:latest
          artifact-name: sbom.spdx
          github-token: ${{ secrets.GITHUB_TOKEN }}
          dependency-snapshot: true
          upload-release-assets: true
